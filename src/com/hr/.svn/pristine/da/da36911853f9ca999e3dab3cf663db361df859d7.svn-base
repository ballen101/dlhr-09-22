package com.hr.timer;

import java.util.Calendar;
import java.util.Date;
import java.util.TimerTask;

import org.json.JSONObject;


import com.corsair.cjpa.CJPABase;
import com.corsair.cjpa.CJPALineData;
import com.corsair.dbpool.util.Logsw;
import com.corsair.dbpool.util.Systemdate;
import com.hr.attd.entity.Hrkq_parms;
import com.hr.msg.entity.Hr_kq_day_report;
import com.hr.msg.entity.Wx_msg_send;
import com.hr.util.DateUtil;
import com.hr.util.HRUtil;
import com.hr.util.wx.SendMsgUtil;

public class TaskPersonSendWx extends TimerTask  {


	/**
	 * 推送无打卡数据
	 */
	private  void sendWxPerson() {
		try {
			// 读取消息模板
			String msgTemplate = "";
			Hrkq_parms msg_template = new Hrkq_parms();
			String sqlstr = "select * from hrkq_parms where parmcode='WX_KQ_MSG_PERSON'";
			msg_template.findBySQL(sqlstr);
			if (!msg_template.isEmpty()) {
				CJPALineData<Wx_msg_send> saveMsgList = new CJPALineData<Wx_msg_send>(Wx_msg_send.class);
				// 暂时先发送三A公司、薪酬绩效部、干部管理&HRMS部
				String sql = "select a.er_id,a.employee_code,a.employee_name,no_card_num,yer_no_card_num,yer_no_card_times,make_up_num,date from Hr_kq_day_report a" +
						" inner join hr_employee b on b.employee_code=a.employee_code where  (b.idpath like '1,11547,11548,12402,%' OR b.idpath LIKE '1,10134,10136,%' OR  b.idpath LIKE '1,11547,11548,11554,%') and  date='" + DateUtil.getYerDate()
						+ "'";
				CJPALineData<Hr_kq_day_report> cas = new CJPALineData<Hr_kq_day_report>(Hr_kq_day_report.class);
				cas.findDataBySQL(sql);
				for (CJPABase jpa : cas) {
					Hr_kq_day_report ca = (Hr_kq_day_report) jpa;
					msgTemplate = msg_template.parmvalue.getValue();
					msgTemplate = msgTemplate.replace("{{employee_name}}", ca.employee_name.getValue());
					msgTemplate = msgTemplate.replace("{{time}}", ca.date.getValue().replace("00:00:00", ""));
					msgTemplate = msgTemplate.replace("{{yer_no_card_num}}", ca.yer_no_card_num.getValue());
					if(ca.yer_no_card_num.getValue().equals("0")){
						msgTemplate = msgTemplate.replace("（{{yer_no_card_times}}）", "");
					}else{
						msgTemplate = msgTemplate.replace("{{yer_no_card_times}}", ca.yer_no_card_times.getValue());
					}

					msgTemplate = msgTemplate.replace("{{no_card_num}}", ca.no_card_num.getValue());
					msgTemplate = msgTemplate.replace("{{make_up_num}}", ca.make_up_num.getValue());
					Wx_msg_send msg = new Wx_msg_send();
					msg.employee_code.setValue(ca.employee_code.getValue());
					msg.content.setValue(msgTemplate);
					String retult = SendMsgUtil.sendText(msg.employee_code.getValue(), msgTemplate);
					// String retult=SendMsgUtil.sendText("377614", msgTemplate);
					JSONObject jsonObj = new JSONObject(retult);
					msg.errcode.setValue(jsonObj.get("errcode").toString());
					msg.errmsg.setValue(jsonObj.get("errmsg").toString());
					msg.send_time.setValue(Systemdate.getStrDate());
					saveMsgList.add(msg);
				}
				if (saveMsgList.size() > 0) {
					saveMsgList.saveBatchSimple();
				}
			}
			// 读取人员考勤异常数据
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		if(HRUtil.RunSendWxPersonflag){
			HRUtil.RunSendWxPersonflag=false;
			try{
				Calendar calendar = Calendar.getInstance();
				calendar.setTime(new Date());
				int minute=calendar.get(Calendar.MINUTE);
				int hour=calendar.get(Calendar.HOUR_OF_DAY);
				if(hour==9 && minute==15){
					sendWxPerson();// 推送无打卡个人数据
				}
			}catch(Exception e){
				Logsw.dblog("个人考勤运算结束:"+e.toString());
			}finally {
				HRUtil.RunSendWxPersonflag=true;
			}

		}	
	}
}
